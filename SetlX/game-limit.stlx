value := cachedProcedure(State, player, limit) {
    if (finished(State)) {
        return utility(State, player);
    }
    if (limit == 0) {
        return 0;
    }
    other := arb(players() - { player });
    return max({ -value(s, other, limit -1) : s in nextStates(State, player) });
};
best_move := procedure(State, player, limit) {
    AllStates := nextStates(State, player);
    other     := arb(players() - { player });
    bestValue := max({ -value(s, other, limit) : s in AllStates });
    return rnd({ s : s in AllStates | -value(s, other, limit) == bestValue });
};
